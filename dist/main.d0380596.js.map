{"mappings":"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","sources":["./site/main.js","./make-it-rain.js"],"sourcesContent":["import makeItRain from '../make-it-rain'\r\n\r\nconst rain = makeItRain()\r\nwindow.addEventListener('load', rain)\r\n","export default function makeItRain(options = {}) {\r\n    return function() {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.style = 'position:fixed; left:0; top:0; pointer-events:none'\r\n        canvas.id = 'make-it-rain-canvas';\r\n        canvas.width = document.body.clientWidth || window.innerWidth;\r\n        canvas.height = document.body.clientHeight || window.innerHeight;\r\n\r\n        var scale = window.devicePixelRatio;\r\n        var cvwidth = canvas.width;\r\n        var cvheight = canvas.height;\r\n\r\n        document.body.appendChild(canvas);\r\n\r\n        const noRainDivElements = document.getElementsByClassName('no-rain')\r\n        let noRainDivs = []\r\n\r\n        const rainSpeed = (options.rainSpeed || 15) * scale;\r\n        const dropLength = (options.dropLength || 20) * scale;\r\n        const dropWidth = (options.dropWidth || 3) * scale;\r\n        const rainColor = options.rainColor || '255,255,255'\r\n\r\n        function isInViewport(rect) {\r\n            return (\r\n                rect.bottom >= 0 &&\r\n                rect.left >= 0 &&\r\n                // rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n                rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n            );\r\n        }\r\n        const updateNoRainDivsPosition = () => {\r\n            noRainDivs = []\r\n            for (let div of noRainDivElements) {\r\n                const boundingRect = div.getBoundingClientRect()\r\n                if (isInViewport(boundingRect)) {\r\n                    noRainDivs.push({\r\n                        left: boundingRect.left,\r\n                        right: boundingRect.right,\r\n                        top: boundingRect.top,\r\n                        bottom: boundingRect.bottom,\r\n                        width: boundingRect.width\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        updateNoRainDivsPosition()\r\n        window.addEventListener('scroll', updateNoRainDivsPosition)\r\n\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.strokeStyle = \"rgba(255,255,255, 0.7)\";\r\n\r\n        const drawLine = (ctx, x, y, x2, y2) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        const drawLineOpacity = (opacity, ctx, ...args) => {\r\n            ctx.strokeStyle = `rgba(${rainColor},${opacity})`\r\n            drawLine(ctx, ...args)\r\n        }\r\n\r\n        drawLine(ctx, 0, 0, 200, 200);\r\n        var rain = []\r\n        const initialSeed = cvwidth / (scale * 100);\r\n\r\n        const fillNewDrops = (rain) => {\r\n            let r = Math.random() * initialSeed;\r\n            for (let i = 0; i < r; i += 1) {\r\n                rain.push([(Math.random() * cvwidth), 0, Math.round(Math.random() * 10) / 10])\r\n            }\r\n        }\r\n\r\n        const checkNoRainDivs = (rainDrop) => {\r\n            for (const div of noRainDivs) {\r\n                if (rainDrop[0] >= div.left && rainDrop[0] <= div.right && rainDrop[1] >= div.top - dropLength) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n        const rainSplashBacks = () => {\r\n            for (const div of noRainDivs) {\r\n                let j = Math.random() * 30;\r\n                for (let i = 0; i < j; i += 1) {\r\n                    let top = div.top - Math.random() * 25\r\n                    let left = div.left + div.width / 2 + (Math.random() - 0.5) * (div.width + Math.random() * 90);\r\n\r\n\r\n                    ctx.beginPath();\r\n                    ctx.arc(left, top, Math.random() * 3, 0, 2 * Math.PI, true);\r\n                    ctx.stroke();\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        const updateRain = (rain) => {\r\n            for (let i = rain.length - 1; i > 0; i -= 1) {\r\n                if (rain[i][1] >= cvheight || checkNoRainDivs(rain[i])) {\r\n                    const [left, top] = rain.splice(i, 1)[0]\r\n                    ctx.beginPath();\r\n                    ctx.arc(left + Math.random() * 10, top - Math.random() * 10, Math.random() * 3, 0, 2 * Math.PI, true);\r\n                    ctx.stroke();\r\n                    ctx.beginPath();\r\n                    ctx.arc(left + Math.random() * 10, top - Math.random() * 10, Math.random() * 3, 0, 2 * Math.PI, true);\r\n                    ctx.stroke();\r\n                } else {\r\n                    rain[i][1] += rainSpeed // + Math.random() *3\r\n                }\r\n            }\r\n            // rainSplashBacks()\r\n        }\r\n        const drawRain = (rain) => {\r\n            for (const [x, y, z] of rain) {\r\n                drawLineOpacity(z, ctx, x, y, x, y + dropLength)\r\n            }\r\n        }\r\n\r\n\r\n        let h = 0\r\n        var animationNum = 0\r\n        function animate() {\r\n            animationNum = requestAnimationFrame(animate);\r\n            // clear canvas\r\n            ctx.clearRect(0, 0, cvwidth, cvheight);\r\n            fillNewDrops(rain)\r\n            drawRain(rain)\r\n            updateRain(rain)\r\n        }\r\n\r\n        animate()\r\n\r\n        // click handler to add random rects\r\n        window.addEventListener('click', function () {\r\n            this.cancelAnimationFrame(animationNum)\r\n        });\r\n\r\n\r\n    }\r\n}"],"names":["rain","options","arguments","length","undefined","canvas","document","createElement","style","id","width","body","clientWidth","window","innerWidth","height","clientHeight","innerHeight","scale","devicePixelRatio","cvwidth","cvheight","appendChild","noRainDivElements","getElementsByClassName","noRainDivs","rainSpeed","dropLength","rainColor","dropWidth","updateNoRainDivsPosition","_step","rect","_iterator","$bb56c7391662370e9031bb0fb003fd$var$_createForOfIteratorHelper","s","n","done","boundingRect","value","getBoundingClientRect","bottom","left","right","documentElement","push","top","err","e","f","addEventListener","ctx","getContext","strokeStyle","drawLine","x","y","x2","y2","beginPath","moveTo","lineTo","stroke","drawLineOpacity","opacity","concat","_len","args","Array","_key","apply","initialSeed","checkNoRainDivs","rainDrop","_step2","_iterator2","div","animationNum","animate","requestAnimationFrame","clearRect","r","Math","random","i","round","fillNewDrops","_step4","_iterator4","_step4$value","$bb56c7391662370e9031bb0fb003fd$var$_slicedToArray","z","drawRain","_rain$splice$","splice","arc","PI","updateRain","this","cancelAnimationFrame","$bb56c7391662370e9031bb0fb003fd$export$default"],"version":3,"file":"main.d0380596.js.map"}